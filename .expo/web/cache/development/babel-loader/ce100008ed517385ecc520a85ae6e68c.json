{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bryann\\\\Desktop\\\\FrontAsosoft\\\\Asosoft-front\\\\src\\\\components\\\\newsCarousel.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PropTypes from 'prop-types';\nimport NewsCard from \"./newsCard\";\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width;\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  }\n});\n\nvar NewsCarousel = function NewsCarousel(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      actual = _useState2[0],\n      setActual = _useState2[1];\n\n  var flatList = useRef();\n  var onViewRef = React.useRef(function (viewableItems) {\n    return setActual(viewableItems.viewableItems[0].index);\n  });\n  var viewConfigRef = React.useRef({\n    viewAreaCoveragePercentThreshold: 50\n  });\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setActual(function (old) {\n        var newActual = old === data.length - 1 ? 0 : old + 1;\n        if (flatList.current) flatList.current.scrollToIndex({\n          index: newActual,\n          animated: true\n        });\n        return newActual;\n      });\n    }, 8000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return React.createElement(FlatList, {\n    ref: flatList,\n    data: data,\n    horizontal: true,\n    pagingEnabled: true,\n    scrollEnabled: true,\n    onViewableItemsChanged: onViewRef.current,\n    viewabilityConfig: viewConfigRef.current,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: [styles.container, {\n          width: width\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, React.createElement(NewsCard, {\n        notice: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  });\n};\n\nNewsCarousel.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default NewsCarousel;","map":{"version":3,"sources":["C:/Users/Bryann/Desktop/FrontAsosoft/Asosoft-front/src/components/newsCarousel.js"],"names":["React","useState","useEffect","useRef","PropTypes","NewsCard","Dimensions","get","width","styles","StyleSheet","create","container","backgroundColor","NewsCarousel","data","actual","setActual","flatList","onViewRef","viewableItems","index","viewConfigRef","viewAreaCoveragePercentThreshold","interval","setInterval","old","newActual","length","current","scrollToIndex","animated","clearInterval","item","toString","propTypes","array","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IACEC,QADF,EACYC,SADZ,EACuBC,MADvB,QAEO,OAFP;;;;;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP;;sBAEkBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;AAER,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE;AADR;AADoB,CAAlB,CAAf;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAELd,QAAQ,CAAC,CAAD,CAFH;AAAA;AAAA,MAE1Be,MAF0B;AAAA,MAElBC,SAFkB;;AAGjC,MAAMC,QAAQ,GAAGf,MAAM,EAAvB;AACA,MAAMgB,SAAS,GAAGnB,KAAK,CAACG,MAAN,CAAa,UAACiB,aAAD;AAAA,WAAmBH,SAAS,CAACG,aAAa,CAACA,aAAd,CAA4B,CAA5B,EAA+BC,KAAhC,CAA5B;AAAA,GAAb,CAAlB;AACA,MAAMC,aAAa,GAAGtB,KAAK,CAACG,MAAN,CAAa;AAAEoB,IAAAA,gCAAgC,EAAE;AAApC,GAAb,CAAtB;AAEArB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMsB,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjCR,MAAAA,SAAS,CAAC,UAACS,GAAD,EAAS;AACjB,YAAMC,SAAS,GAAID,GAAG,KAAMX,IAAI,CAACa,MAAL,GAAc,CAAxB,GAA8B,CAA9B,GAAkCF,GAAG,GAAG,CAA1D;AACA,YAAIR,QAAQ,CAACW,OAAb,EAAsBX,QAAQ,CAACW,OAAT,CAAiBC,aAAjB,CAA+B;AAAET,UAAAA,KAAK,EAAEM,SAAT;AAAoBI,UAAAA,QAAQ,EAAE;AAA9B,SAA/B;AACtB,eAAOJ,SAAP;AACD,OAJQ,CAAT;AAKD,KAN2B,EAMzB,IANyB,CAA5B;AAQA,WAAO;AAAA,aAAMK,aAAa,CAACR,QAAD,CAAnB;AAAA,KAAP;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEN,QADP;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,UAAU,MAHZ;AAIE,IAAA,aAAa,MAJf;AAKE,IAAA,aAAa,MALf;AAME,IAAA,sBAAsB,EAAEI,SAAS,CAACU,OANpC;AAOE,IAAA,iBAAiB,EAAEP,aAAa,CAACO,OAPnC;AAQE,IAAA,UAAU,EAAE;AAAA,UAAGI,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACxB,MAAM,CAACG,SAAR,EAAmB;AAAEJ,UAAAA,KAAK,EAALA;AAAF,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEyB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADU;AAAA,KARd;AAaE,IAAA,YAAY,EAAE,sBAACA,IAAD,EAAOZ,KAAP;AAAA,aAAiBA,KAAK,CAACa,QAAN,EAAjB;AAAA,KAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAiBD,CApCD;;AAsCApB,YAAY,CAACqB,SAAb,GAAyB;AAEvBpB,EAAAA,IAAI,EAAEX,SAAS,CAACgC,KAAV,CAAgBC;AAFC,CAAzB;AAKA,eAAevB,YAAf","sourcesContent":["import React, {\r\n  useState, useEffect, useRef,\r\n} from 'react'\r\nimport {\r\n  StyleSheet, FlatList, View, Dimensions,\r\n} from 'react-native'\r\nimport PropTypes from 'prop-types'\r\nimport NewsCard from './newsCard'\r\n\r\nconst { width } = Dimensions.get('screen')\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n  },\r\n})\r\n\r\nconst NewsCarousel = ({ data }) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [actual, setActual] = useState(0)\r\n  const flatList = useRef()\r\n  const onViewRef = React.useRef((viewableItems) => setActual(viewableItems.viewableItems[0].index))\r\n  const viewConfigRef = React.useRef({ viewAreaCoveragePercentThreshold: 50 })\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setActual((old) => {\r\n        const newActual = (old === (data.length - 1)) ? 0 : old + 1\r\n        if (flatList.current) flatList.current.scrollToIndex({ index: newActual, animated: true })\r\n        return newActual\r\n      })\r\n    }, 8000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <FlatList\r\n      ref={flatList}\r\n      data={data}\r\n      horizontal\r\n      pagingEnabled\r\n      scrollEnabled\r\n      onViewableItemsChanged={onViewRef.current}\r\n      viewabilityConfig={viewConfigRef.current}\r\n      renderItem={({ item }) => (\r\n        <View style={[styles.container, { width }]}>\r\n          <NewsCard notice={item} />\r\n        </View>\r\n      )}\r\n      keyExtractor={(item, index) => index.toString()}\r\n    />\r\n  )\r\n}\r\n\r\nNewsCarousel.propTypes = {\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  data: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default NewsCarousel\r\n"]},"metadata":{},"sourceType":"module"}